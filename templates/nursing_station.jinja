{% extends "base.jinja" %}
{% block content %}
<div class="min-h-screen bg-gray-100 flex items-center justify-center py-10">
  <!-- Card Container -->
  <div class="w-full max-w-md bg-white rounded-lg shadow p-8">
    <!-- Heading -->
    <h1 class="text-2xl font-bold text-center mb-2">Nursing Station</h1>
    <!-- Subheading -->
    <p class="text-center text-gray-500 mb-6">Register laundry for processing</p>
    
    <!-- Form -->
    <form id="laundryForm">
      <!-- Number of Clothes -->
      <div class="mb-4">
        <label for="quantity" class="block font-semibold mb-1">Number of Clothes</label>
        <div class="relative">
          <input
            type="number"
            id="quantity"
            name="quantity"
            placeholder="Enter quantity"
            class="w-full border border-gray-300 rounded px-3 py-2 focus:outline-none focus:border-blue-500"
            required
          />
        </div>
      </div>
      
      <!-- Type of Clothes -->
      <div class="mb-4">
        <label for="clothes-type" class="block font-semibold mb-1">Type of Clothes</label>
        <select
          id="clothes-type"
          name="clothes_type"
          class="w-full border border-gray-300 rounded px-3 py-2 focus:outline-none focus:border-blue-500"
          required
        >
          <option value="">Select clothes type</option>
          <option value="bed_sheets">Bed Sheets</option>
          <option value="pillowcases">Pillowcases</option>
          <option value="blankets">Blankets</option>
          <option value="towels">Towels</option>
          <option value="patient_gowns">Patient Gowns</option>
          <option value="staff_uniforms">Staff Uniforms</option>
          <option value="surgical_drapes">Surgical Drapes</option>
          <option value="privacy_curtains">Privacy Curtains</option>
          <option value="other">Other</option>
        </select>
      </div>
      
      <!-- State of Clothes -->
      <div class="mb-4">
        <p class="font-semibold">State of Clothes</p>
        <div class="mt-2 space-y-2">
          <label class="flex items-center">
            <input
              type="radio"
              name="state"
              value="non-infected"
              class="mr-2 focus:ring-0"
              required
            />
            <span>Non-Infected</span>
          </label>
          <label class="flex items-center">
            <input
              type="radio"
              name="state"
              value="infected"
              class="mr-2 focus:ring-0"
              required
            />
            <span>Infected</span>
          </label>
          <label class="flex items-center">
            <input
              type="radio"
              name="state"
              value="highly-stained-infected"
              class="mr-2 focus:ring-0"
              required
            />
            <span>Highly Stained &amp; Infected</span>
          </label>
          <label class="flex items-center">
            <input
              type="radio"
              name="state"
              value="less-stained"
              class="mr-2 focus:ring-0"
              required
            />
            <span>Less Stained</span>
          </label>
        </div>
      </div>
      
      <!-- Submit Button -->
      <button
        type="submit"
        class="w-full bg-blue-600 text-white py-2 rounded hover:bg-blue-700 transition-colors"
      >
        Generate QR Code
      </button>
    </form>
  </div>
</div>

<!-- Modal Popup for the QR Code -->
<div id="modal" class="fixed inset-0 flex items-center justify-center bg-black bg-opacity-80 hidden">
  <div class="bg-white rounded-lg shadow-lg p-8 relative max-w-xs w-full">
    <button id="closeModal" class="absolute top-2 right-2 text-gray-500 hover:text-gray-700 text-2xl">&times;</button>
    <h1 class="text-green-500 text-lg font-bold text-center mb-5">QR Code generated Successfully!</h1>
    <div id="qrcodeModal" class="flex justify-center mb-4"></div>
    <p id="uuidDisplay" class="text-center mb-4"></p>
    <div class="flex justify-between gap-2">
      <button id="downloadQR" class="bg-green-600 text-white py-2 px-4 rounded-lg hover:bg-green-700">Download QR Code</button>
      <button id="confirmButton" class="bg-blue-600 text-white py-2 px-4 rounded-lg hover:bg-blue-700">Confirm</button>
    </div>
  </div>
</div>

<!-- Include QRCode.js library -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/qrcodejs/1.0.0/qrcode.min.js"></script>
<script>
// Global variable to store form data
var formData = {};

// Helper function to get CSRF token from cookies
function getCookie(name) {
    let cookieValue = null;
    if (document.cookie && document.cookie !== '') {
        let cookies = document.cookie.split(';');
        for (let i = 0; i < cookies.length; i++) {
            let cookie = cookies[i].trim();
            if (cookie.substring(0, name.length + 1) === (name + '=')) {
                cookieValue = decodeURIComponent(cookie.substring(name.length + 1));
                break;
            }
        }
    }
    return cookieValue;
}

document.getElementById('laundryForm').addEventListener('submit', function(event) {
    event.preventDefault(); // Prevent form from submitting normally
    
    // Gather form values
    var quantity = document.getElementById('quantity').value;
    var clothesType = document.getElementById('clothes-type').value;
    var state = document.querySelector('input[name="state"]:checked').value;

    // Generate a 5-digit UUID
    var uuid = Math.floor(10000 + Math.random() * 90000).toString();

    // Create JSON object with form data and store in global variable
    formData = {
        "UUID": uuid,
        "Number of Clothes": quantity,
        "Type of Clothes": clothesType,
        "State of Clothes": state
    };

    // Convert the JSON object to a string for the QR code
    var jsonString = JSON.stringify(formData);

    // Clear any previous QR code in the modal
    document.getElementById('qrcodeModal').innerHTML = '';

    // Generate the QR Code with the JSON string
    new QRCode(document.getElementById('qrcodeModal'), {
        text: jsonString,
        width: 200,
        height: 200
    });

    // Display the UUID in the modal
    document.getElementById('uuidDisplay').textContent = "UUID: " + uuid;

    // Show the modal pop-up
    document.getElementById('modal').classList.remove('hidden');
});

// Close the modal when the close button is clicked
document.getElementById('closeModal').addEventListener('click', function() {
    document.getElementById('modal').classList.add('hidden');
});

// Add event listener for QR code download
document.getElementById('downloadQR').addEventListener('click', function() {
    var qrContainer = document.getElementById('qrcodeModal');
    var qrImg = qrContainer.querySelector('img');
    if (qrImg) {
        var link = document.createElement('a');
        link.href = qrImg.src;
        link.download = 'qr-code.png';
        document.body.appendChild(link);
        link.click();
        document.body.removeChild(link);
    } else {
        alert("QR Code image not found!");
    }
});

// Confirm button sends data to the Django backend
document.getElementById('confirmButton').addEventListener('click', function() {
    fetch('/nursing-station/add/', { 
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
            'X-CSRFToken': getCookie('csrftoken')
        },
        body: JSON.stringify(formData)
    })
    .then(response => response.json())
    .then(data => {
        if(data.status === "success"){
            // Redirect or show a success message as needed
            window.location.href = '/task-schedule/'; // Adjust the URL as needed
        } else {
            alert("Error: " + data.message);
        }
    })
    .catch(error => {
        console.error('Error:', error);
    });
});
</script>
{% endblock %}
